{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cart-updated",
  "type": "registry:component",
  "title": "Cart Updated",
  "description": "Cart update confirmation component showing changes made",
  "registryDependencies": [
    "badge",
    "https://registry-starter.vercel.app/r/theme.json"
  ],
  "files": [
    {
      "path": "src/components/ui/cart-updated.tsx",
      "content": "import type * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nfunction CartUpdated({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated\"\n\t\t\tclassName={cn(\"space-y-4\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-header\"\n\t\t\tclassName={cn(\"flex items-center gap-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedIcon({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-icon\"\n\t\t\tclassName={cn(\"size-4\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedTitle({ className, ...props }: React.ComponentProps<\"h4\">) {\n\treturn (\n\t\t<h4\n\t\t\tdata-slot=\"cart-updated-title\"\n\t\t\tclassName={cn(\"font-medium text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedChanges({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-changes\"\n\t\t\tclassName={cn(\"space-y-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedChangesTitle({ className, ...props }: React.ComponentProps<\"h5\">) {\n\treturn (\n\t\t<h5\n\t\t\tdata-slot=\"cart-updated-changes-title\"\n\t\t\tclassName={cn(\"text-xs font-medium text-muted-foreground uppercase tracking-wide\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedItems({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-items\"\n\t\t\tclassName={cn(\"grid gap-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedItem({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-item\"\n\t\t\tclassName={cn(\"flex items-center gap-3 rounded-lg border p-2 bg-muted/20\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedItemIcon({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-item-icon\"\n\t\t\tclassName={cn(\"size-4\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedItemContent({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-item-content\"\n\t\t\tclassName={cn(\"flex-1 min-w-0\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedItemTitle({ className, ...props }: React.ComponentProps<\"p\">) {\n\treturn (\n\t\t<p\n\t\t\tdata-slot=\"cart-updated-item-title\"\n\t\t\tclassName={cn(\"font-medium text-sm truncate\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedItemDetails({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-item-details\"\n\t\t\tclassName={cn(\"flex items-center gap-2 text-xs text-muted-foreground\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedItemBadge({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-item-badge\"\n\t\t\tclassName={cn(\"text-xs\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedActions({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-updated-actions\"\n\t\t\tclassName={cn(\"pt-2 border-t\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartUpdatedViewCart({ className, ...props }: React.ComponentProps<\"a\">) {\n\treturn (\n\t\t<a\n\t\t\tdata-slot=\"cart-updated-view-cart\"\n\t\t\tclassName={cn(\n\t\t\t\t\"flex items-center justify-center gap-2 w-full bg-secondary text-secondary-foreground hover:bg-secondary/80 rounded-md px-3 py-2 text-sm transition-colors\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport {\n\tCartUpdated,\n\tCartUpdatedHeader,\n\tCartUpdatedIcon,\n\tCartUpdatedTitle,\n\tCartUpdatedChanges,\n\tCartUpdatedChangesTitle,\n\tCartUpdatedItems,\n\tCartUpdatedItem,\n\tCartUpdatedItemIcon,\n\tCartUpdatedItemContent,\n\tCartUpdatedItemTitle,\n\tCartUpdatedItemDetails,\n\tCartUpdatedItemBadge,\n\tCartUpdatedActions,\n\tCartUpdatedViewCart,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/cart-updated.tsx",
      "content": "import { CheckCircleIcon, PlusIcon, MinusIcon, XIcon, ShoppingCartIcon } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n\tCartUpdated,\n\tCartUpdatedHeader,\n\tCartUpdatedIcon,\n\tCartUpdatedTitle,\n\tCartUpdatedChanges,\n\tCartUpdatedChangesTitle,\n\tCartUpdatedItems,\n\tCartUpdatedItem,\n\tCartUpdatedItemIcon,\n\tCartUpdatedItemContent,\n\tCartUpdatedItemTitle,\n\tCartUpdatedItemDetails,\n\tCartUpdatedItemBadge,\n\tCartUpdatedActions,\n\tCartUpdatedViewCart,\n} from \"@/components/ui/cart-updated\";\n\nconst mockUpdatedItems = [\n\t{\n\t\tid: \"1\",\n\t\ttitle: \"Premium Wireless Headphones\",\n\t\tquantity: 2,\n\t\taction: \"added\"\n\t},\n\t{\n\t\tid: \"2\",\n\t\ttitle: \"Smart Watch Pro\",\n\t\tquantity: 1,\n\t\taction: \"removed\"\n\t}\n];\n\nconst mockCartSummary = {\n\ttotalQuantity: 3,\n\tcheckoutUrl: \"https://example.com/checkout\"\n};\n\nfunction getActionIcon(action: string) {\n\tswitch (action) {\n\t\tcase \"added\":\n\t\t\treturn PlusIcon;\n\t\tcase \"removed\":\n\t\t\treturn XIcon;\n\t\tdefault:\n\t\t\treturn MinusIcon;\n\t}\n}\n\nfunction getActionColor(action: string) {\n\tswitch (action) {\n\t\tcase \"added\":\n\t\t\treturn \"text-secondary-foreground\";\n\t\tcase \"removed\":\n\t\t\treturn \"text-destructive\";\n\t\tdefault:\n\t\t\treturn \"text-muted-foreground\";\n\t}\n}\n\nfunction getActionText(action: string, quantity: number) {\n\tswitch (action) {\n\t\tcase \"added\":\n\t\t\treturn `Added ${quantity} items`;\n\t\tcase \"removed\":\n\t\t\treturn `Removed ${quantity} items`;\n\t\tdefault:\n\t\t\treturn `Updated ${quantity} items`;\n\t}\n}\n\nfunction getActionBadgeText(action: string) {\n\tswitch (action) {\n\t\tcase \"added\":\n\t\t\treturn \"Added\";\n\t\tcase \"removed\":\n\t\t\treturn \"Removed\";\n\t\tdefault:\n\t\t\treturn \"Updated\";\n\t}\n}\n\nexport function CartUpdatedComponent() {\n\treturn (\n\t\t<CartUpdated className=\"w-[400px]\">\n\t\t\t<CartUpdatedHeader>\n\t\t\t\t<CartUpdatedIcon>\n\t\t\t\t\t<CheckCircleIcon className=\"size-4 text-secondary-foreground\" />\n\t\t\t\t</CartUpdatedIcon>\n\t\t\t\t<CartUpdatedTitle>Cart Updated Successfully</CartUpdatedTitle>\n\t\t\t\t<Badge variant=\"secondary\">\n\t\t\t\t\t{mockCartSummary.totalQuantity} total items\n\t\t\t\t</Badge>\n\t\t\t</CartUpdatedHeader>\n\n\t\t\t{mockUpdatedItems.length > 0 && (\n\t\t\t\t<CartUpdatedChanges>\n\t\t\t\t\t<CartUpdatedChangesTitle>Changes Made</CartUpdatedChangesTitle>\n\t\t\t\t\t<CartUpdatedItems>\n\t\t\t\t\t\t{mockUpdatedItems.map((item) => {\n\t\t\t\t\t\t\tconst ActionIcon = getActionIcon(item.action);\n\t\t\t\t\t\t\tconst actionColor = getActionColor(item.action);\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CartUpdatedItem key={item.id}>\n\t\t\t\t\t\t\t\t\t<CartUpdatedItemIcon>\n\t\t\t\t\t\t\t\t\t\t<ActionIcon className={actionColor} />\n\t\t\t\t\t\t\t\t\t</CartUpdatedItemIcon>\n\t\t\t\t\t\t\t\t\t<CartUpdatedItemContent>\n\t\t\t\t\t\t\t\t\t\t<CartUpdatedItemTitle>{item.title}</CartUpdatedItemTitle>\n\t\t\t\t\t\t\t\t\t\t<CartUpdatedItemDetails>\n\t\t\t\t\t\t\t\t\t\t\t<span>{getActionText(item.action, item.quantity)}</span>\n\t\t\t\t\t\t\t\t\t\t</CartUpdatedItemDetails>\n\t\t\t\t\t\t\t\t\t</CartUpdatedItemContent>\n\t\t\t\t\t\t\t\t\t<CartUpdatedItemBadge>\n\t\t\t\t\t\t\t\t\t\t<Badge variant=\"outline\" className={actionColor}>\n\t\t\t\t\t\t\t\t\t\t\t{getActionBadgeText(item.action)}\n\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t</CartUpdatedItemBadge>\n\t\t\t\t\t\t\t\t</CartUpdatedItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</CartUpdatedItems>\n\t\t\t\t</CartUpdatedChanges>\n\t\t\t)}\n\n\t\t\t<CartUpdatedActions>\n\t\t\t\t<CartUpdatedViewCart href={mockCartSummary.checkoutUrl}>\n\t\t\t\t\t<ShoppingCartIcon className=\"size-4\" />\n\t\t\t\t\tView Updated Cart\n\t\t\t\t</CartUpdatedViewCart>\n\t\t\t</CartUpdatedActions>\n\t\t</CartUpdated>\n\t);\n}",
      "type": "registry:component"
    },
    {
      "path": "src/v0/minimal-layout.tsx",
      "content": "import { Geist, Geist_Mono, Montserrat } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/tokens.css\";\nimport \"@/app/globals.css\";\n\nconst GeistSans = Geist({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst GeistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n});\n\nconst MontserratSerif = Montserrat({\n  subsets: [\"latin\"],\n  variable: \"--font-serif\",\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\n        GeistSans.variable,\n        GeistMono.variable,\n        MontserratSerif.variable,\n        \"bg-background text-foreground\",\n      )}\n    >\n      <body>\n        <main className=\"mt-16 flex w-full justify-center\">\n          <div className=\"container\">{children}</div>\n        </main>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    }
  ]
}