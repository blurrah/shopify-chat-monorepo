{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "product-carousel",
  "type": "registry:component",
  "title": "Product Carousel",
  "description": "Server-side product carousel with scroll snap",
  "registryDependencies": [
    "badge",
    "button",
    "product-card",
    "https://registry-starter.vercel.app/r/theme.json"
  ],
  "files": [
    {
      "path": "src/components/product-carousel.tsx",
      "content": "import { Badge } from \"@/components/ui/badge\";\nimport {\n    ProductCard,\n    ProductCardImage,\n    ProductCardContent,\n    ProductCardTitle,\n    ProductCardPrice,\n    ProductCardDescription,\n    ProductCardActions,\n    ProductCardLink,\n} from \"@/components/ui/product-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Product {\n    product_id: string;\n    title: string;\n    image_url?: string;\n    description?: string;\n    price_range?: {\n        min: string | number;\n        max: string | number;\n        currency: string;\n    };\n    url?: string;\n}\n\ninterface ProductCarouselProps {\n    products?: Product[];\n    className?: string;\n}\n\n// Mock products for demo\nconst mockProducts: Product[] = [\n    {\n        product_id: \"1\",\n        title: \"Premium Wireless Headphones\",\n        image_url: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=300&fit=crop\",\n        description: \"High-quality wireless headphones with noise cancellation and premium sound quality.\",\n        price_range: { min: 199, max: 299, currency: \"$\" },\n        url: \"https://example.com/product/1\"\n    },\n    {\n        product_id: \"2\",\n        title: \"Smart Watch Pro\",\n        image_url: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=400&h=300&fit=crop\",\n        description: \"Advanced fitness tracking and health monitoring in a sleek design.\",\n        price_range: { min: 399, max: 499, currency: \"$\" },\n        url: \"https://example.com/product/2\"\n    },\n    {\n        product_id: \"3\",\n        title: \"Portable Speaker\",\n        image_url: \"https://images.unsplash.com/photo-1608043152269-423dbba4e7e1?w=400&h=300&fit=crop\",\n        description: \"Waterproof Bluetooth speaker with 360-degree sound and 24-hour battery.\",\n        price_range: { min: 79, max: 99, currency: \"$\" },\n        url: \"https://example.com/product/3\"\n    },\n    {\n        product_id: \"4\",\n        title: \"Camera Lens Kit\",\n        image_url: \"https://images.unsplash.com/photo-1606986628025-35d57e735ae0?w=400&h=300&fit=crop\",\n        description: \"Professional photography lens kit for mobile devices.\",\n        price_range: { min: 149, max: 199, currency: \"$\" },\n        url: \"https://example.com/product/4\"\n    },\n    {\n        product_id: \"5\",\n        title: \"Laptop Stand\",\n        image_url: \"https://images.unsplash.com/photo-1527864550417-7fd91fc51a46?w=400&h=300&fit=crop\",\n        description: \"Ergonomic aluminum laptop stand for better posture and cooling.\",\n        price_range: { min: 49, max: 69, currency: \"$\" },\n        url: \"https://example.com/product/5\"\n    }\n];\n\nexport function ProductCarouselComponent({\n    products = mockProducts,\n    className\n}: ProductCarouselProps) {\n    if (products.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className={cn(\"w-full space-y-4\", className)}>\n            <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"font-medium text-lg\">Products</h3>\n                <Badge variant=\"secondary\">{products.length} found</Badge>\n            </div>\n\n            {/* Scrollable container with scroll snap */}\n            <div className=\"relative\">\n                <div \n                    className=\"flex gap-4 overflow-x-auto pb-4 snap-x snap-mandatory scroll-smooth\"\n                    style={{\n                        scrollbarWidth: 'thin',\n                        scrollbarColor: 'rgb(203 213 225) transparent',\n                    }}\n                >\n                    {products.map((product) => (\n                        <div \n                            key={product.product_id} \n                            className=\"flex-none w-[300px] snap-start\"\n                        >\n                            <ProductCard className=\"h-full\">\n                                {product.image_url && (\n                                    <ProductCardImage\n                                        src={product.image_url}\n                                        alt={product.title}\n                                    />\n                                )}\n                                <ProductCardContent>\n                                    <ProductCardTitle>{product.title}</ProductCardTitle>\n                                    {product.price_range && (\n                                        <ProductCardPrice>\n                                            Between {product.price_range.currency}\n                                            {product.price_range.min} and {product.price_range.currency}\n                                            {product.price_range.max}\n                                        </ProductCardPrice>\n                                    )}\n                                    {product.description && (\n                                        <ProductCardDescription>\n                                            {product.description}\n                                        </ProductCardDescription>\n                                    )}\n                                    <ProductCardActions>\n                                        {product.url && (\n                                            <ProductCardLink href={product.url}>\n                                                View Product â†’\n                                            </ProductCardLink>\n                                        )}\n                                        <Button size=\"sm\" className=\"w-full\">\n                                            Add to Cart\n                                        </Button>\n                                        <Button size=\"sm\" className=\"w-full\" variant=\"outline\">\n                                            Get product details\n                                        </Button>\n                                    </ProductCardActions>\n                                </ProductCardContent>\n                            </ProductCard>\n                        </div>\n                    ))}\n                </div>\n\n                {/* Custom scrollbar styles for webkit browsers */}\n                <style jsx>{`\n                    .overflow-x-auto::-webkit-scrollbar {\n                        height: 8px;\n                    }\n                    .overflow-x-auto::-webkit-scrollbar-track {\n                        background: transparent;\n                        border-radius: 4px;\n                    }\n                    .overflow-x-auto::-webkit-scrollbar-thumb {\n                        background: rgb(203 213 225);\n                        border-radius: 4px;\n                    }\n                    .overflow-x-auto::-webkit-scrollbar-thumb:hover {\n                        background: rgb(148 163 184);\n                    }\n                `}</style>\n            </div>\n        </div>\n    );\n}",
      "type": "registry:component"
    },
    {
      "path": "src/v0/minimal-layout.tsx",
      "content": "import { Geist, Geist_Mono, Montserrat } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/tokens.css\";\nimport \"@/app/globals.css\";\n\nconst GeistSans = Geist({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst GeistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n});\n\nconst MontserratSerif = Montserrat({\n  subsets: [\"latin\"],\n  variable: \"--font-serif\",\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\n        GeistSans.variable,\n        GeistMono.variable,\n        MontserratSerif.variable,\n        \"bg-background text-foreground\",\n      )}\n    >\n      <body>\n        <main className=\"mt-16 flex w-full justify-center\">\n          <div className=\"container\">{children}</div>\n        </main>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    }
  ]
}