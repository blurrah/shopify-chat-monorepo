{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cart",
  "type": "registry:component",
  "title": "Cart",
  "description": "Shopping cart component displaying items and checkout",
  "registryDependencies": [
    "badge",
    "https://registry-starter.vercel.app/r/theme.json"
  ],
  "files": [
    {
      "path": "src/components/ui/cart.tsx",
      "content": "import type * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nfunction Cart({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart\"\n\t\t\tclassName={cn(\"space-y-4\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-header\"\n\t\t\tclassName={cn(\"flex items-center justify-between\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-title\"\n\t\t\tclassName={cn(\"flex items-center gap-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartTitleText({ className, ...props }: React.ComponentProps<\"h4\">) {\n\treturn (\n\t\t<h4\n\t\t\tdata-slot=\"cart-title-text\"\n\t\t\tclassName={cn(\"font-medium text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartIcon({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-icon\"\n\t\t\tclassName={cn(\"size-4 text-muted-foreground\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartEmpty({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-empty\"\n\t\t\tclassName={cn(\"text-center py-6 text-muted-foreground\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartEmptyIcon({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-empty-icon\"\n\t\t\tclassName={cn(\"size-8 mx-auto mb-2 opacity-50\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartEmptyText({ className, ...props }: React.ComponentProps<\"p\">) {\n\treturn (\n\t\t<p\n\t\t\tdata-slot=\"cart-empty-text\"\n\t\t\tclassName={cn(\"text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartContent({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-content\"\n\t\t\tclassName={cn(\"space-y-3\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItems({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-items\"\n\t\t\tclassName={cn(\"grid gap-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItem({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-item\"\n\t\t\tclassName={cn(\"flex gap-3 rounded-lg border p-3 bg-muted/20\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemContent({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-item-content\"\n\t\t\tclassName={cn(\"flex-1 min-w-0\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemTitle({ className, ...props }: React.ComponentProps<\"h5\">) {\n\treturn (\n\t\t<h5\n\t\t\tdata-slot=\"cart-item-title\"\n\t\t\tclassName={cn(\"font-medium text-sm truncate\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemDetails({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-item-details\"\n\t\t\tclassName={cn(\"flex items-center justify-between mt-1\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemInfo({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-item-info\"\n\t\t\tclassName={cn(\"flex items-center gap-2 text-xs text-muted-foreground\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemPrice({ className, ...props }: React.ComponentProps<\"span\">) {\n\treturn (\n\t\t<span\n\t\t\tdata-slot=\"cart-item-price\"\n\t\t\tclassName={cn(\"font-semibold text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartSummary({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-summary\"\n\t\t\tclassName={cn(\"flex items-center justify-between pt-2 border-t\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartSummaryLabel({ className, ...props }: React.ComponentProps<\"span\">) {\n\treturn (\n\t\t<span\n\t\t\tdata-slot=\"cart-summary-label\"\n\t\t\tclassName={cn(\"font-medium text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartSummaryTotal({ className, ...props }: React.ComponentProps<\"span\">) {\n\treturn (\n\t\t<span\n\t\t\tdata-slot=\"cart-summary-total\"\n\t\t\tclassName={cn(\"font-bold text-lg\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartCheckout({ className, ...props }: React.ComponentProps<\"a\">) {\n\treturn (\n\t\t<a\n\t\t\tdata-slot=\"cart-checkout\"\n\t\t\tclassName={cn(\n\t\t\t\t\"flex items-center justify-center gap-2 w-full bg-primary text-primary-foreground hover:bg-primary/90 rounded-md px-4 py-2 text-sm font-medium transition-colors\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport {\n\tCart,\n\tCartHeader,\n\tCartTitle,\n\tCartTitleText,\n\tCartIcon,\n\tCartEmpty,\n\tCartEmptyIcon,\n\tCartEmptyText,\n\tCartContent,\n\tCartItems,\n\tCartItem,\n\tCartItemContent,\n\tCartItemTitle,\n\tCartItemDetails,\n\tCartItemInfo,\n\tCartItemPrice,\n\tCartSummary,\n\tCartSummaryLabel,\n\tCartSummaryTotal,\n\tCartCheckout,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/cart.tsx",
      "content": "import { ExternalLinkIcon, ShoppingCartIcon } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n\tCart,\n\tCartCheckout,\n\tCartContent,\n\tCartEmpty,\n\tCartEmptyIcon,\n\tCartEmptyText,\n\tCartHeader,\n\tCartIcon,\n\tCartItem,\n\tCartItemContent,\n\tCartItemDetails,\n\tCartItemInfo,\n\tCartItemPrice,\n\tCartItems,\n\tCartItemTitle,\n\tCartSummary,\n\tCartSummaryLabel,\n\tCartSummaryTotal,\n\tCartTitle,\n\tCartTitleText,\n} from \"@/components/ui/cart\";\n\ninterface CartItemData {\n\tid: string;\n\ttitle: string;\n\tquantity: number;\n\tvariant?: string;\n\tprice: number;\n\tcurrency?: string;\n}\n\ninterface CartTotal {\n\tamount: number | string;\n\tcurrency: string;\n}\n\ninterface CartData {\n\titems?: CartItemData[];\n\ttotal?: CartTotal;\n\tcheckoutUrl?: string;\n}\n\ninterface CartComponentProps {\n\tcart?: CartData;\n}\n\nconst mockCartItems: CartItemData[] = [\n\t{\n\t\tid: \"1\",\n\t\ttitle: \"Premium Wireless Headphones\",\n\t\tquantity: 1,\n\t\tvariant: \"Black - Standard\",\n\t\tprice: 299.99,\n\t\tcurrency: \"$\",\n\t},\n\t{\n\t\tid: \"2\",\n\t\ttitle: \"Smart Watch Pro\",\n\t\tquantity: 2,\n\t\tvariant: \"Silver - 42mm\",\n\t\tprice: 399.99,\n\t\tcurrency: \"$\",\n\t},\n];\n\nconst mockTotal: CartTotal = {\n\tamount: 1099.97,\n\tcurrency: \"$\",\n};\n\nconst mockCart: CartData = {\n\titems: mockCartItems,\n\ttotal: mockTotal,\n\tcheckoutUrl: \"https://example.com/checkout\",\n};\n\nexport function CartComponent({ cart = mockCart }: CartComponentProps) {\n\tconst items = cart.items || [];\n\tconst total = cart.total || { amount: 0, currency: \"$\" };\n\tconst checkoutUrl = cart.checkoutUrl || \"https://example.com/checkout\";\n\tconst isEmpty = items.length === 0;\n\tconst totalItems = items.reduce((sum, item) => sum + item.quantity, 0);\n\n\treturn (\n\t\t<Cart className=\"w-[400px]\">\n\t\t\t<CartHeader>\n\t\t\t\t<CartTitle>\n\t\t\t\t\t<CartIcon>\n\t\t\t\t\t\t<ShoppingCartIcon className=\"size-4 text-muted-foreground\" />\n\t\t\t\t\t</CartIcon>\n\t\t\t\t\t<CartTitleText>Shopping Cart</CartTitleText>\n\t\t\t\t</CartTitle>\n\t\t\t\t{!isEmpty && <Badge variant=\"secondary\">{totalItems} items</Badge>}\n\t\t\t</CartHeader>\n\n\t\t\t{isEmpty ? (\n\t\t\t\t<CartEmpty>\n\t\t\t\t\t<CartEmptyIcon>\n\t\t\t\t\t\t<ShoppingCartIcon className=\"size-8 mx-auto mb-2 opacity-50\" />\n\t\t\t\t\t</CartEmptyIcon>\n\t\t\t\t\t<CartEmptyText>Your cart is empty</CartEmptyText>\n\t\t\t\t</CartEmpty>\n\t\t\t) : (\n\t\t\t\t<CartContent>\n\t\t\t\t\t<CartItems>\n\t\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t\t<CartItem key={item.id}>\n\t\t\t\t\t\t\t\t<CartItemContent>\n\t\t\t\t\t\t\t\t\t<CartItemTitle>{item.title}</CartItemTitle>\n\t\t\t\t\t\t\t\t\t<CartItemDetails>\n\t\t\t\t\t\t\t\t\t\t<CartItemInfo>\n\t\t\t\t\t\t\t\t\t\t\t<span>Qty: {item.quantity}</span>\n\t\t\t\t\t\t\t\t\t\t\t{item.variant && <span>â€¢ Variant: {item.variant}</span>}\n\t\t\t\t\t\t\t\t\t\t</CartItemInfo>\n\t\t\t\t\t\t\t\t\t\t<CartItemPrice>\n\t\t\t\t\t\t\t\t\t\t\t<span>{item.currency || \"$\"}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span>{(item.price * item.quantity).toFixed(2)}</span>\n\t\t\t\t\t\t\t\t\t\t</CartItemPrice>\n\t\t\t\t\t\t\t\t\t</CartItemDetails>\n\t\t\t\t\t\t\t\t</CartItemContent>\n\t\t\t\t\t\t\t</CartItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CartItems>\n\n\t\t\t\t\t<CartSummary>\n\t\t\t\t\t\t<CartSummaryLabel>Total</CartSummaryLabel>\n\t\t\t\t\t\t<CartSummaryTotal>\n\t\t\t\t\t\t\t<span>{total.currency}</span>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{typeof total.amount === \"number\"\n\t\t\t\t\t\t\t\t\t? total.amount.toFixed(2)\n\t\t\t\t\t\t\t\t\t: total.amount}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</CartSummaryTotal>\n\t\t\t\t\t</CartSummary>\n\n\t\t\t\t\t<CartCheckout href={checkoutUrl}>\n\t\t\t\t\t\tProceed to Checkout\n\t\t\t\t\t\t<ExternalLinkIcon className=\"size-4\" />\n\t\t\t\t\t</CartCheckout>\n\t\t\t\t</CartContent>\n\t\t\t)}\n\t\t</Cart>\n\t);\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/v0/minimal-layout.tsx",
      "content": "import { Geist, Geist_Mono, Montserrat } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/tokens.css\";\nimport \"@/app/globals.css\";\n\nconst GeistSans = Geist({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst GeistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n});\n\nconst MontserratSerif = Montserrat({\n  subsets: [\"latin\"],\n  variable: \"--font-serif\",\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\n        GeistSans.variable,\n        GeistMono.variable,\n        MontserratSerif.variable,\n        \"bg-background text-foreground\",\n      )}\n    >\n      <body>\n        <main className=\"mt-16 flex w-full justify-center\">\n          <div className=\"container\">{children}</div>\n        </main>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    }
  ]
}