{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cart",
  "type": "registry:component",
  "title": "Cart",
  "description": "Shopping cart component displaying items and checkout",
  "registryDependencies": [
    "badge",
    "https://registry-starter.vercel.app/r/theme.json"
  ],
  "files": [
    {
      "path": "src/components/ui/cart.tsx",
      "content": "import type * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nfunction Cart({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart\"\n\t\t\tclassName={cn(\"space-y-4\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-header\"\n\t\t\tclassName={cn(\"flex items-center justify-between\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-title\"\n\t\t\tclassName={cn(\"flex items-center gap-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartTitleText({ className, ...props }: React.ComponentProps<\"h4\">) {\n\treturn (\n\t\t<h4\n\t\t\tdata-slot=\"cart-title-text\"\n\t\t\tclassName={cn(\"font-medium text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartIcon({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-icon\"\n\t\t\tclassName={cn(\"size-4 text-muted-foreground\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartEmpty({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-empty\"\n\t\t\tclassName={cn(\"text-center py-6 text-muted-foreground\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartEmptyIcon({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-empty-icon\"\n\t\t\tclassName={cn(\"size-8 mx-auto mb-2 opacity-50\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartEmptyText({ className, ...props }: React.ComponentProps<\"p\">) {\n\treturn (\n\t\t<p\n\t\t\tdata-slot=\"cart-empty-text\"\n\t\t\tclassName={cn(\"text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartContent({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-content\"\n\t\t\tclassName={cn(\"space-y-3\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItems({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-items\"\n\t\t\tclassName={cn(\"grid gap-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItem({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-item\"\n\t\t\tclassName={cn(\"flex gap-3 rounded-lg border p-3 bg-muted/20\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemContent({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-item-content\"\n\t\t\tclassName={cn(\"flex-1 min-w-0\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemTitle({ className, ...props }: React.ComponentProps<\"h5\">) {\n\treturn (\n\t\t<h5\n\t\t\tdata-slot=\"cart-item-title\"\n\t\t\tclassName={cn(\"font-medium text-sm truncate\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemDetails({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-item-details\"\n\t\t\tclassName={cn(\"flex items-center justify-between mt-1\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemInfo({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-item-info\"\n\t\t\tclassName={cn(\"flex items-center gap-2 text-xs text-muted-foreground\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartItemPrice({ className, ...props }: React.ComponentProps<\"span\">) {\n\treturn (\n\t\t<span\n\t\t\tdata-slot=\"cart-item-price\"\n\t\t\tclassName={cn(\"font-semibold text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartSummary({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"cart-summary\"\n\t\t\tclassName={cn(\"flex items-center justify-between pt-2 border-t\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartSummaryLabel({ className, ...props }: React.ComponentProps<\"span\">) {\n\treturn (\n\t\t<span\n\t\t\tdata-slot=\"cart-summary-label\"\n\t\t\tclassName={cn(\"font-medium text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartSummaryTotal({ className, ...props }: React.ComponentProps<\"span\">) {\n\treturn (\n\t\t<span\n\t\t\tdata-slot=\"cart-summary-total\"\n\t\t\tclassName={cn(\"font-bold text-lg\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CartCheckout({ className, ...props }: React.ComponentProps<\"a\">) {\n\treturn (\n\t\t<a\n\t\t\tdata-slot=\"cart-checkout\"\n\t\t\tclassName={cn(\n\t\t\t\t\"flex items-center justify-center gap-2 w-full bg-primary text-primary-foreground hover:bg-primary/90 rounded-md px-4 py-2 text-sm font-medium transition-colors\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport {\n\tCart,\n\tCartHeader,\n\tCartTitle,\n\tCartTitleText,\n\tCartIcon,\n\tCartEmpty,\n\tCartEmptyIcon,\n\tCartEmptyText,\n\tCartContent,\n\tCartItems,\n\tCartItem,\n\tCartItemContent,\n\tCartItemTitle,\n\tCartItemDetails,\n\tCartItemInfo,\n\tCartItemPrice,\n\tCartSummary,\n\tCartSummaryLabel,\n\tCartSummaryTotal,\n\tCartCheckout,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/cart.tsx",
      "content": "import { ExternalLinkIcon, ShoppingCartIcon } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n\tCart,\n\tCartCheckout,\n\tCartContent,\n\tCartEmpty,\n\tCartEmptyIcon,\n\tCartEmptyText,\n\tCartHeader,\n\tCartIcon,\n\tCartItem,\n\tCartItemContent,\n\tCartItemDetails,\n\tCartItemInfo,\n\tCartItemPrice,\n\tCartItems,\n\tCartItemTitle,\n\tCartSummary,\n\tCartSummaryLabel,\n\tCartSummaryTotal,\n\tCartTitle,\n\tCartTitleText,\n} from \"@/components/ui/cart\";\n\n// Shopify cart types\ninterface ShopifyCartLine {\n\tid: string;\n\tquantity: number;\n\tcost: {\n\t\ttotal_amount: {\n\t\t\tamount: string;\n\t\t\tcurrency: string;\n\t\t};\n\t\tsubtotal_amount: {\n\t\t\tamount: string;\n\t\t\tcurrency: string;\n\t\t};\n\t};\n\tmerchandise: {\n\t\tid: string;\n\t\ttitle: string;\n\t\tproduct: {\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t};\n\t};\n}\n\ninterface ShopifyCart {\n\tid: string;\n\tcreated_at: string;\n\tupdated_at: string;\n\tlines: ShopifyCartLine[];\n\tdelivery: Record<string, any>;\n\tdiscounts: Record<string, any>;\n\tgift_cards: any[];\n\tcost: {\n\t\ttotal_amount: {\n\t\t\tamount: string;\n\t\t\tcurrency: string;\n\t\t};\n\t\tsubtotal_amount: {\n\t\t\tamount: string;\n\t\t\tcurrency: string;\n\t\t};\n\t\ttotal_tax_amount?: {\n\t\t\tamount: string;\n\t\t\tcurrency: string;\n\t\t};\n\t};\n\ttotal_quantity: number;\n\tcheckout_url: string;\n}\n\ninterface CartComponentProps {\n\tinstructions?: string;\n\tcart?: ShopifyCart;\n\terrors?: any[];\n}\n\n// Mock Shopify cart data based on the example provided\nconst mockCart: ShopifyCart = {\n\tid: \"gid://shopify/Cart/hWN1YuVAnGXUipguqgELC4kV?key=c8fe3d5a36146ec30e34c140a072b4bc\",\n\tcreated_at: \"2025-08-08T12:23:51.696Z\",\n\tupdated_at: \"2025-08-08T12:23:51.696Z\",\n\tlines: [\n\t\t{\n\t\t\tid: \"gid://shopify/CartLine/05aff3c5-d3fe-4dd8-b257-327c607ad906?cart=hWN1YuVAnGXUipguqgELC4kV\",\n\t\t\tquantity: 1,\n\t\t\tcost: {\n\t\t\t\ttotal_amount: {\n\t\t\t\t\tamount: \"19.95\",\n\t\t\t\t\tcurrency: \"USD\",\n\t\t\t\t},\n\t\t\t\tsubtotal_amount: {\n\t\t\t\t\tamount: \"19.95\",\n\t\t\t\t\tcurrency: \"USD\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmerchandise: {\n\t\t\t\tid: \"gid://shopify/ProductVariant/14574992523362\",\n\t\t\t\ttitle: \"3.5 oz (100g) Tin\",\n\t\t\t\tproduct: {\n\t\t\t\t\tid: \"gid://shopify/Product/1614972518498\",\n\t\t\t\t\ttitle: \"Culinary Grade Matcha Powder\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n\tdelivery: {},\n\tdiscounts: {},\n\tgift_cards: [],\n\tcost: {\n\t\ttotal_amount: {\n\t\t\tamount: \"19.95\",\n\t\t\tcurrency: \"USD\",\n\t\t},\n\t\tsubtotal_amount: {\n\t\t\tamount: \"19.95\",\n\t\t\tcurrency: \"USD\",\n\t\t},\n\t\ttotal_tax_amount: {\n\t\t\tamount: \"0.0\",\n\t\t\tcurrency: \"USD\",\n\t\t},\n\t},\n\ttotal_quantity: 1,\n\tcheckout_url:\n\t\t\"https://itoen.com/cart/c/hWN1YuVAnGXUipguqgELC4kV?key=c8fe3d5a36146ec30e34c140a072b4bc\",\n};\n\nfunction formatCurrency(currency: string): string {\n\t// Map common currency codes to symbols\n\tconst currencySymbols: Record<string, string> = {\n\t\tUSD: \"$\",\n\t\tEUR: \"€\",\n\t\tGBP: \"£\",\n\t\tCAD: \"$\",\n\t\tAUD: \"$\",\n\t\tJPY: \"¥\",\n\t};\n\treturn currencySymbols[currency] || currency;\n}\n\nexport function CartComponent({\n\tinstructions = \"Your shopping cart\",\n\tcart = mockCart,\n\terrors = [],\n}: CartComponentProps) {\n\tconst isEmpty = cart.lines.length === 0;\n\tconst totalItems = cart.total_quantity;\n\tconst currencySymbol = formatCurrency(cart.cost.total_amount.currency);\n\tconst hasErrors = errors && errors.length > 0;\n\n\treturn (\n\t\t<Cart className=\"w-[400px]\">\n\t\t\t<CartHeader>\n\t\t\t\t<CartTitle>\n\t\t\t\t\t<CartIcon>\n\t\t\t\t\t\t<ShoppingCartIcon className=\"size-4 text-muted-foreground\" />\n\t\t\t\t\t</CartIcon>\n\t\t\t\t\t<CartTitleText>{instructions}</CartTitleText>\n\t\t\t\t</CartTitle>\n\t\t\t\t{!isEmpty && (\n\t\t\t\t\t<Badge variant=\"secondary\">\n\t\t\t\t\t\t{totalItems} {totalItems === 1 ? \"item\" : \"items\"}\n\t\t\t\t\t</Badge>\n\t\t\t\t)}\n\t\t\t</CartHeader>\n\n\t\t\t{isEmpty ? (\n\t\t\t\t<CartEmpty>\n\t\t\t\t\t<CartEmptyIcon>\n\t\t\t\t\t\t<ShoppingCartIcon className=\"size-8 mx-auto mb-2 opacity-50\" />\n\t\t\t\t\t</CartEmptyIcon>\n\t\t\t\t\t<CartEmptyText>Your cart is empty</CartEmptyText>\n\t\t\t\t</CartEmpty>\n\t\t\t) : (\n\t\t\t\t<CartContent>\n\t\t\t\t\t<CartItems>\n\t\t\t\t\t\t{cart.lines.map((line) => {\n\t\t\t\t\t\t\tconst unitPrice =\n\t\t\t\t\t\t\t\tparseFloat(line.cost.subtotal_amount.amount) / line.quantity;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CartItem key={line.id}>\n\t\t\t\t\t\t\t\t\t<CartItemContent>\n\t\t\t\t\t\t\t\t\t\t<CartItemTitle>\n\t\t\t\t\t\t\t\t\t\t\t{line.merchandise.product.title}\n\t\t\t\t\t\t\t\t\t\t</CartItemTitle>\n\t\t\t\t\t\t\t\t\t\t<CartItemDetails>\n\t\t\t\t\t\t\t\t\t\t\t<CartItemInfo>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Qty: {line.quantity}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t{line.merchandise.title !==\n\t\t\t\t\t\t\t\t\t\t\t\t\tline.merchandise.product.title && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>• {line.merchandise.title}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</CartItemInfo>\n\t\t\t\t\t\t\t\t\t\t\t<CartItemPrice>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{currencySymbol}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{line.cost.total_amount.amount}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t{line.quantity > 1 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-muted-foreground ml-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(<span>{currencySymbol}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{unitPrice.toFixed(2)}</span> each)\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</CartItemPrice>\n\t\t\t\t\t\t\t\t\t\t</CartItemDetails>\n\t\t\t\t\t\t\t\t\t</CartItemContent>\n\t\t\t\t\t\t\t\t</CartItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</CartItems>\n\n\t\t\t\t\t<CartSummary>\n\t\t\t\t\t\t<CartSummaryLabel>\n\t\t\t\t\t\t\t<div className=\"space-y-1\">\n\t\t\t\t\t\t\t\t<div className=\"flex justify-between text-sm text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t<span>Subtotal</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<span>{currencySymbol}</span>\n\t\t\t\t\t\t\t\t\t\t<span>{cart.cost.subtotal_amount.amount}</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{cart.cost.total_tax_amount &&\n\t\t\t\t\t\t\t\t\tparseFloat(cart.cost.total_tax_amount.amount) > 0 && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-between text-sm text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t\t\t<span>Tax</span>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{currencySymbol}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{cart.cost.total_tax_amount.amount}</span>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className=\"flex justify-between font-semibold pt-1 border-t\">\n\t\t\t\t\t\t\t\t\t<span>Total</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t{currencySymbol}\n\t\t\t\t\t\t\t\t\t\t{cart.cost.total_amount.amount}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CartSummaryLabel>\n\t\t\t\t\t\t<CartSummaryTotal className=\"sr-only\">\n\t\t\t\t\t\t\t{currencySymbol}\n\t\t\t\t\t\t\t{cart.cost.total_amount.amount}\n\t\t\t\t\t\t</CartSummaryTotal>\n\t\t\t\t\t</CartSummary>\n\n\t\t\t\t\t{hasErrors && (\n\t\t\t\t\t\t<div className=\"px-6 py-3 border-t\">\n\t\t\t\t\t\t\t<div className=\"text-sm text-destructive\">\n\t\t\t\t\t\t\t\t{errors.map((error, index) => (\n\t\t\t\t\t\t\t\t\t<div key={index}>{JSON.stringify(error)}</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<CartCheckout href={cart.checkout_url}>\n\t\t\t\t\t\tProceed to Checkout\n\t\t\t\t\t\t<ExternalLinkIcon className=\"size-4\" />\n\t\t\t\t\t</CartCheckout>\n\t\t\t\t</CartContent>\n\t\t\t)}\n\t\t</Cart>\n\t);\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/v0/minimal-layout.tsx",
      "content": "import { Geist, Geist_Mono, Montserrat } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/tokens.css\";\nimport \"@/app/globals.css\";\n\nconst GeistSans = Geist({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst GeistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n});\n\nconst MontserratSerif = Montserrat({\n  subsets: [\"latin\"],\n  variable: \"--font-serif\",\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\n        GeistSans.variable,\n        GeistMono.variable,\n        MontserratSerif.variable,\n        \"bg-background text-foreground\",\n      )}\n    >\n      <body>\n        <main className=\"mt-16 flex w-full justify-center\">\n          <div className=\"container\">{children}</div>\n        </main>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    }
  ]
}